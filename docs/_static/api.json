{"swagger": "2.0", "info": {"title": "Pulp 3 API", "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"}, "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/pulp/api/v3/content/rpm/errata/": {"get": {"operationId": "content_rpm_errata_list", "summary": "List update records", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/errata/\n\nAlso specify queryset and serializer for UpdateRecord.", "parameters": [{"name": "id", "in": "query", "description": "Filter results where id matches value", "required": false, "type": "string"}, {"name": "id__in", "in": "query", "description": "Filter results where id is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "status", "in": "query", "description": "Filter results where status matches value", "required": false, "type": "string"}, {"name": "status__in", "in": "query", "description": "Filter results where status is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "severity", "in": "query", "description": "Filter results where severity matches value", "required": false, "type": "string"}, {"name": "severity__in", "in": "query", "description": "Filter results where severity is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "type", "in": "query", "description": "Filter results where type matches value", "required": false, "type": "string"}, {"name": "type__in", "in": "query", "description": "Filter results where type is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/UpdateRecord"}}}}}}, "tags": ["content"]}, "post": {"operationId": "content_rpm_errata_create", "summary": "Create an update record", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/errata/\n\nAlso specify queryset and serializer for UpdateRecord.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UpdateRecord"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UpdateRecord"}}}, "tags": ["content"]}, "parameters": []}, "{update_record_href}": {"get": {"operationId": "content_rpm_errata_read", "summary": "Inspect an update record", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/errata/\n\nAlso specify queryset and serializer for UpdateRecord.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UpdateRecord"}}}, "tags": ["content"]}, "parameters": [{"name": "update_record_href", "in": "path", "description": "URI of Update Record. e.g.: /pulp/api/v3/content/rpm/errata/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/packages/": {"get": {"operationId": "content_rpm_packages_list", "summary": "List packages", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/packages/\n\nAlso specify queryset and serializer for Package.", "parameters": [{"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "epoch", "in": "query", "description": "Filter results where epoch matches value", "required": false, "type": "string"}, {"name": "epoch__in", "in": "query", "description": "Filter results where epoch is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "version", "in": "query", "description": "Filter results where version matches value", "required": false, "type": "string"}, {"name": "version__in", "in": "query", "description": "Filter results where version is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "release", "in": "query", "description": "Filter results where release matches value", "required": false, "type": "string"}, {"name": "release__in", "in": "query", "description": "Filter results where release is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "arch", "in": "query", "description": "Filter results where arch matches value", "required": false, "type": "string"}, {"name": "arch__in", "in": "query", "description": "Filter results where arch is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pkgId", "in": "query", "description": "Filter results where pkgId matches value", "required": false, "type": "string"}, {"name": "pkgId__in", "in": "query", "description": "Filter results where pkgId is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "checksum_type", "in": "query", "description": "Filter results where checksum_type matches value", "required": false, "type": "string"}, {"name": "checksum_type__in", "in": "query", "description": "Filter results where checksum_type is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Package"}}}}}}, "tags": ["content"]}, "post": {"operationId": "content_rpm_packages_create", "summary": "Create a package", "description": "Create a new Package from a request.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Package"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Package"}}}, "tags": ["content"]}, "parameters": []}, "{package_href}": {"get": {"operationId": "content_rpm_packages_read", "summary": "Inspect a package", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/packages/\n\nAlso specify queryset and serializer for Package.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Package"}}}, "tags": ["content"]}, "parameters": [{"name": "package_href", "in": "path", "description": "URI of Package. e.g.: /pulp/api/v3/content/rpm/packages/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/rpm/rpm/": {"get": {"operationId": "distributions_rpm_rpm_list", "summary": "List rpm distributions", "description": "ViewSet for RPM Distributions.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RpmDistribution"}}}}}}, "tags": ["distributions"]}, "post": {"operationId": "distributions_rpm_rpm_create", "summary": "Create a rpm distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RpmDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions"]}, "parameters": []}, "{rpm_distribution_href}": {"get": {"operationId": "distributions_rpm_rpm_read", "summary": "Inspect a rpm distribution", "description": "ViewSet for RPM Distributions.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RpmDistribution"}}}, "tags": ["distributions"]}, "put": {"operationId": "distributions_rpm_rpm_update", "summary": "Update a rpm distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RpmDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions"]}, "patch": {"operationId": "distributions_rpm_rpm_partial_update", "summary": "Partially update a rpm distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RpmDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions"]}, "delete": {"operationId": "distributions_rpm_rpm_delete", "summary": "Delete a rpm distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions"]}, "parameters": [{"name": "rpm_distribution_href", "in": "path", "description": "URI of Rpm Distribution. e.g.: /pulp/api/v3/distributions/rpm/rpm/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/publications/rpm/rpm/": {"get": {"operationId": "publications_rpm_rpm_list", "summary": "List rpm publications", "description": "ViewSet for Rpm Publications.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RpmPublication"}}}}}}, "tags": ["publications"]}, "post": {"operationId": "publications_rpm_rpm_create", "summary": "Create a rpm publication", "description": "Trigger an asynchronous task to create a new RPM content publication.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RpmPublication"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["publications"]}, "parameters": []}, "{rpm_publication_href}": {"get": {"operationId": "publications_rpm_rpm_read", "summary": "Inspect a rpm publication", "description": "ViewSet for Rpm Publications.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RpmPublication"}}}, "tags": ["publications"]}, "delete": {"operationId": "publications_rpm_rpm_delete", "summary": "Delete a rpm publication", "description": "ViewSet for Rpm Publications.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "rpm_publication_href", "in": "path", "description": "URI of Rpm Publication. e.g.: /pulp/api/v3/publications/rpm/rpm/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/rpm/rpm/": {"get": {"operationId": "remotes_rpm_rpm_list", "summary": "List rpm remotes", "description": "A ViewSet for RpmRemote.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "_last_updated__lt", "in": "query", "description": "Filter results where _last_updated is less than value", "required": false, "type": "string"}, {"name": "_last_updated__lte", "in": "query", "description": "Filter results where _last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__gt", "in": "query", "description": "Filter results where _last_updated is greater than value", "required": false, "type": "string"}, {"name": "_last_updated__gte", "in": "query", "description": "Filter results where _last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__range", "in": "query", "description": "Filter results where _last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RpmRemote"}}}}}}, "tags": ["remotes"]}, "post": {"operationId": "remotes_rpm_rpm_create", "summary": "Create a rpm remote", "description": "A ViewSet for RpmRemote.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RpmRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RpmRemote"}}}, "tags": ["remotes"]}, "parameters": []}, "{rpm_remote_href}": {"get": {"operationId": "remotes_rpm_rpm_read", "summary": "Inspect a rpm remote", "description": "A ViewSet for RpmRemote.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RpmRemote"}}}, "tags": ["remotes"]}, "put": {"operationId": "remotes_rpm_rpm_update", "summary": "Update a rpm remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RpmRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "patch": {"operationId": "remotes_rpm_rpm_partial_update", "summary": "Partially update a rpm remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RpmRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "delete": {"operationId": "remotes_rpm_rpm_delete", "summary": "Delete a rpm remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "parameters": [{"name": "rpm_remote_href", "in": "path", "description": "URI of Rpm Remote. e.g.: /pulp/api/v3/remotes/rpm/rpm/1/", "required": true, "type": "string"}]}, "{rpm_remote_href}sync/": {"post": {"operationId": "remotes_rpm_rpm_sync", "description": "Trigger an asynchronous task to sync RPM content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "parameters": [{"name": "rpm_remote_href", "in": "path", "description": "URI of Rpm Remote. e.g.: /pulp/api/v3/remotes/rpm/rpm/1/", "required": true, "type": "string"}]}, "/rpm/upload/": {"post": {"operationId": "rpm_upload_read", "description": "Create an artifact and trigger an asynchronoustask to create RPM content from it, optionallycreate new repository version.", "parameters": [{"name": "repository", "in": "formData", "description": "A URI of the repository.", "required": false, "type": "string", "format": "uri"}, {"name": "file", "in": "formData", "description": "The rpm file.", "required": true, "type": "file"}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["rpm"]}, "parameters": []}}, "definitions": {"UpdateRecord": {"required": ["id", "updated_date", "description", "issued_date", "fromstr", "status", "title", "summary", "version", "type", "severity", "solution", "release", "rights", "pushcount"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "id": {"title": "Id", "description": "Update id (short update name, e.g. RHEA-2013:1777)", "type": "string", "minLength": 1}, "updated_date": {"title": "Updated date", "description": "Date when the update was updated (e.g. '2013-12-02 00:00:00')", "type": "string", "minLength": 1}, "description": {"title": "Description", "description": "Update description", "type": "string", "minLength": 1}, "issued_date": {"title": "Issued date", "description": "Date when the update was issued (e.g. '2013-12-02 00:00:00')", "type": "string", "minLength": 1}, "fromstr": {"title": "Fromstr", "description": "Source of the update (e.g. security@redhat.com)", "type": "string", "minLength": 1}, "status": {"title": "Status", "description": "Update status ('final', ...)", "type": "string", "minLength": 1}, "title": {"title": "Title", "description": "Update name", "type": "string", "minLength": 1}, "summary": {"title": "Summary", "description": "Short summary", "type": "string", "minLength": 1}, "version": {"title": "Version", "description": "Update version (probably always an integer number)", "type": "string", "minLength": 1}, "type": {"title": "Type", "description": "Update type ('enhancement', 'bugfix', ...)", "type": "string", "minLength": 1}, "severity": {"title": "Severity", "description": "Severity", "type": "string", "minLength": 1}, "solution": {"title": "Solution", "description": "Solution", "type": "string", "minLength": 1}, "release": {"title": "Release", "description": "Update release", "type": "string", "minLength": 1}, "rights": {"title": "Rights", "description": "Copyrights", "type": "string", "minLength": 1}, "pushcount": {"title": "Pushcount", "description": "Push count", "type": "string", "minLength": 1}, "pkglist": {"description": "List of packages", "type": "array", "items": {"type": "string"}, "readOnly": true}, "references": {"description": "List of references", "type": "array", "items": {"type": "string"}, "readOnly": true}}}, "Package": {"required": ["_artifact", "name", "version", "release", "arch", "pkgId", "checksum_type", "location_href", "rpm_header_start", "rpm_header_end", "size_archive", "size_installed", "size_package", "time_build", "time_file"], "type": "object", "properties": {"_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "Name of the package", "type": "string", "minLength": 1}, "epoch": {"title": "Epoch", "description": "The package's epoch", "type": "string"}, "version": {"title": "Version", "description": "The version of the package. For example, '2.8.0'", "type": "string", "minLength": 1}, "release": {"title": "Release", "description": "The release of a particular version of the package. e.g. '1.el7' or '3.f24'", "type": "string", "minLength": 1}, "arch": {"title": "Arch", "description": "The target architecture for a package.For example, 'x86_64', 'i686', or 'noarch'", "type": "string", "minLength": 1}, "pkgId": {"title": "Pkgid", "description": "Checksum of the package file", "type": "string", "minLength": 1}, "checksum_type": {"title": "Checksum type", "description": "Type of checksum, e.g. 'sha256', 'md5'", "type": "string", "minLength": 1}, "summary": {"title": "Summary", "description": "Short description of the packaged software", "type": "string"}, "description": {"title": "Description", "description": "In-depth description of the packaged software", "type": "string"}, "url": {"title": "Url", "description": "URL with more information about the packaged software", "type": "string"}, "changelogs": {"title": "Changelogs", "description": "Changelogs that package contains", "type": "string", "default": "[]", "minLength": 1}, "files": {"title": "Files", "description": "Files that package contains", "type": "string", "default": "[]", "minLength": 1}, "requires": {"title": "Requires", "description": "Capabilities the package requires", "type": "string", "default": "[]", "minLength": 1}, "provides": {"title": "Provides", "description": "Capabilities the package provides", "type": "string", "default": "[]", "minLength": 1}, "conflicts": {"title": "Conflicts", "description": "Capabilities the package conflicts", "type": "string", "default": "[]", "minLength": 1}, "obsoletes": {"title": "Obsoletes", "description": "Capabilities the package obsoletes", "type": "string", "default": "[]", "minLength": 1}, "suggests": {"title": "Suggests", "description": "Capabilities the package suggests", "type": "string", "default": "[]", "minLength": 1}, "enhances": {"title": "Enhances", "description": "Capabilities the package enhances", "type": "string", "default": "[]", "minLength": 1}, "recommends": {"title": "Recommends", "description": "Capabilities the package recommends", "type": "string", "default": "[]", "minLength": 1}, "supplements": {"title": "Supplements", "description": "Capabilities the package supplements", "type": "string", "default": "[]", "minLength": 1}, "location_base": {"title": "Location base", "description": "Base location of this package", "type": "string"}, "location_href": {"title": "Location href", "description": "Relative location of package to the repodata", "type": "string", "minLength": 1}, "rpm_buildhost": {"title": "Rpm buildhost", "description": "Hostname of the system that built the package", "type": "string"}, "rpm_group": {"title": "Rpm group", "description": "RPM group (See: http://fedoraproject.org/wiki/RPMGroups)", "type": "string"}, "rpm_license": {"title": "Rpm license", "description": "License term applicable to the package software (GPLv2, etc.)", "type": "string"}, "rpm_packager": {"title": "Rpm packager", "description": "Person or persons responsible for creating the package", "type": "string"}, "rpm_sourcerpm": {"title": "Rpm sourcerpm", "description": "Name of the source package (srpm) the package was built from", "type": "string"}, "rpm_vendor": {"title": "Rpm vendor", "description": "Name of the organization that produced the package", "type": "string"}, "rpm_header_start": {"title": "Rpm header start", "description": "First byte of the header", "type": "integer"}, "rpm_header_end": {"title": "Rpm header end", "description": "Last byte of the header", "type": "integer"}, "size_archive": {"title": "Size archive", "description": "Size, in bytes, of the archive portion of the original package file", "type": "integer"}, "size_installed": {"title": "Size installed", "description": "Total size, in bytes, of every file installed by this package", "type": "integer"}, "size_package": {"title": "Size package", "description": "Size, in bytes, of the package", "type": "integer"}, "time_build": {"title": "Time build", "description": "Time the package was built in seconds since the epoch", "type": "integer"}, "time_file": {"title": "Time file", "description": "The 'file' time attribute in the primary XML - file mtime in seconds since the epoch.", "type": "integer"}, "relative_path": {"title": "Relative path", "description": "File name of the package", "type": "string", "x-nullable": true}}}, "RpmDistribution": {"required": ["base_path", "name"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "maxLength": 255, "minLength": 1}, "base_url": {"title": "Base url", "description": "The URL for accessing the publication as defined by this distribution.", "type": "string", "readOnly": true, "minLength": 1}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "maxLength": 255, "minLength": 1}, "publication": {"title": "Publication", "description": "Publication to be served", "type": "string", "format": "uri", "x-nullable": true}}}, "AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "RpmPublication": {"type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "publisher": {"title": "Publisher", "type": "string", "format": "uri", "x-nullable": true}, "repository_version": {"title": "Repository version", "type": "string", "format": "uri"}, "repository": {"title": "Repository", "description": "A URI of the repository to be published.", "type": "string", "format": "uri"}}}, "RpmRemote": {"required": ["name", "url"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "validate": {"title": "Validate", "description": "If True, the plugin will validate imported artifacts.", "type": "boolean"}, "ssl_ca_certificate": {"title": "Ssl ca certificate", "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server. Returns SHA256 sum on GET.", "type": "string"}, "ssl_client_certificate": {"title": "Ssl client certificate", "description": "A PEM encoded client certificate used for authentication. Returns SHA256 sum on GET.", "type": "string"}, "ssl_client_key": {"title": "Ssl client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string"}, "ssl_validation": {"title": "Ssl validation", "description": "If True, SSL peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string"}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string"}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string"}, "_last_updated": {"title": " last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'cache_only'. 'immediate' is the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}}}, "RepositorySyncURL": {"required": ["repository"], "type": "object", "properties": {"repository": {"title": "Repository", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only.", "type": "boolean", "default": false}}}}, "tags": [{"name": "content", "x-displayName": "Content"}, {"name": "distributions", "x-displayName": "Distributions"}, {"name": "publications", "x-displayName": "Publications"}, {"name": "remotes", "x-displayName": "Remotes"}, {"name": "rpm", "x-displayName": "Rpm"}]}